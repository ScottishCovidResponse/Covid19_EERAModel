# cases post change in recording practices
url_scot_country <- "https://www.gov.scot/binaries/content/documents/govscot/publications/statistics/2020/04/coronavirus-covid-19-trends-in-daily-data/documents/trends-in-number-of-people-in-hospital-with-confirmed-or-suspected-covid-19/trends-in-number-of-people-in-hospital-with-confirmed-or-suspected-covid-19/govscot%3Adocument/Trends%2Bin%2Bdaily%2BCOVID-19%2Bdata%2B-%2B110520.xlsx?forceDownload=true"
httr::GET(url_scot_country, httr::write_disk(scot_data_gov <- tempfile(fileext = "govcoviddata.xlsx")))
df_cases_tot <- readxl::read_excel(scot_data_gov, sheet = "Table 5 - Testing", skip = 3)%>%
rename("Date" = "...1",
"confirmed_cases" = "Positive")%>%
mutate(new_cases = `Daily...5`)%>%
select(Date, confirmed_cases, new_cases)
df_deaths_tot <- readxl::read_excel(scot_data_gov, sheet = "Table 8 - Deaths", skip =2) %>%
select(Date, `Number of COVID-19 confirmed deaths registered to date`) %>%
rename(deaths = `Number of COVID-19 confirmed deaths registered to date`) %>%
mutate(new_deaths = deaths - replace_na(lag(deaths),0))%>%
select(Date, deaths, new_deaths)
upto = "2020-06-09"
extend_case = extend_epi_records(base_data = tidy_case_data(case_df), extra_data = df_cases_tot, data_name='confirmed_cases')
extend_death = extend_epi_records(base_data = tidy_case_data(death_df), extra_data = df_deaths_tot, data_name='deaths')
scot_data = create_history(extend_case,tidy_pop_data(pop_df), upto = upto)$data
scot_death = create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data
polymoduk_norm=read_xlsx("/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/contact_matrices_152_countries/MUestimates_all_locations_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_home=read_xlsx("/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/contact_matrices_152_countries/MUestimates_home_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_other=read_xlsx("/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/contact_matrices_152_countries/MUestimates_other_locations_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
scot_data
extend_case = extend_epi_records(base_data = tidy_case_data(case_df), extra_data = df_cases_tot, data_name='confirmed_cases')
extend_death = extend_epi_records(base_data = tidy_case_data(death_df), extra_data = df_deaths_tot, data_name='deaths')
scot_data = create_history(extend_case,tidy_pop_data(pop_df), upto = upto)$data
scot_death = create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data
scot_data
scot_death
polymoduk_norm=read_xlsx("/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/contact_matrices_152_countries/MUestimates_all_locations_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_home=read_xlsx("/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/contact_matrices_152_countries/MUestimates_home_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_other=read_xlsx("/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/contact_matrices_152_countries/MUestimates_other_locations_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_work=read_xlsx("/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/contact_matrices_152_countries/MUestimates_work_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_school=read_xlsx("/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/contact_matrices_152_countries/MUestimates_school_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
waifw_norm = create_mixmat(polymoduk_norm)
waifw_home = create_mixmat(polymoduk_home)
waifw_other = create_mixmat(polymoduk_other)
waifw_school = create_mixmat(polymoduk_school)
waifw_work = create_mixmat(polymoduk_work)
waifw_sdist = waifw_home + waifw_other
census_age = read_csv(file ="/Users/tporphyr/Documents/PROJECTS/COVID-19/Covid19_EERAModel/data/HealthBoard_census/DC1117SC.csv",
skip=5 , col_names = c("Health_Board","age","All people","Males","Females"), col_types = cols())
order_name = create_history(tidy_case_data(case_df),tidy_pop_data(pop_df), upto = upto)$name
scot_age <- create_age_pop(census_df = census_age, order_name)
extend_epi_records
death_df
tidy_case_data(death_df)
scot_death
tidy_case_data(death_df)
tidy_death_data <- function(death_df){
require(dplyr)
death_df[death_df == "x"] <- NA
scot_deaths <- death_df %>%
rename(`Scotland`= `Grand Total`) %>%
mutate(Date = lubridate::dmy(Date))
return(scot_deaths)
}
tidy_case_data(death_df)
death_df[death_df == "x"]
death_df
death_df[death_df == "x"]
class(death_df)
death_df$data.frame[death_df$data.frame == "x"]
death_df[death_df == "x"]
?mutate_all
death_df %>% mutate_all(na_if(., "x") )
scot_deaths <- death_df %>%
rename(`Scotland`= `Grand Total`) %>%
mutate(Date = lubridate::dmy(Date))
scot_deaths
scot_deaths%>% replace(.=="x", NA)
scot_deaths%>%
mutate_at(vars(-Date), na_if(., "x"))
scot_deaths%>%
mutate_at(vars(-Date), replace(.=="x", NA))
?na_if
scot_deaths%>%
mutate_if(is.character, list(~na_if(., "x")))
tidy_death_data <- function(death_df){
require(dplyr)
scot_deaths <- death_df %>%
rename(`Scotland`= `Grand Total`) %>%
mutate(Date = lubridate::dmy(Date)) %>%
mutate_if(is.character, list(~na_if(., "x")))
return(scot_deaths)
}
source("eeraModel_data_preprocessing_functions.R")
#======================
# Settings
#======================
do.write = F
WATTY62DATA <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/regional_cases.csv"
WATTY62POP <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/HB_Populations.csv"
WATTY62DEATHS <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/regional_deaths.csv"
pop_df <- readr::read_csv(file =WATTY62POP , col_types = cols())
case_df = readr::read_csv(file = WATTY62DATA, col_types = cols())
death_df <- readr::read_csv(file = WATTY62DEATHS, col_types = cols())
# cases post change in recording practices
url_scot_country <- "https://www.gov.scot/binaries/content/documents/govscot/publications/statistics/2020/04/coronavirus-covid-19-trends-in-daily-data/documents/trends-in-number-of-people-in-hospital-with-confirmed-or-suspected-covid-19/trends-in-number-of-people-in-hospital-with-confirmed-or-suspected-covid-19/govscot%3Adocument/Trends%2Bin%2Bdaily%2BCOVID-19%2Bdata%2B-%2B110520.xlsx?forceDownload=true"
httr::GET(url_scot_country, httr::write_disk(scot_data_gov <- tempfile(fileext = "govcoviddata.xlsx")))
df_cases_tot <- readxl::read_excel(scot_data_gov, sheet = "Table 5 - Testing", skip = 3)%>%
rename("Date" = "...1",
"confirmed_cases" = "Positive")%>%
mutate(new_cases = `Daily...5`)%>%
select(Date, confirmed_cases, new_cases)
df_deaths_tot <- readxl::read_excel(scot_data_gov, sheet = "Table 8 - Deaths", skip =2) %>%
select(Date, `Number of COVID-19 confirmed deaths registered to date`) %>%
rename(deaths = `Number of COVID-19 confirmed deaths registered to date`) %>%
mutate(new_deaths = deaths - replace_na(lag(deaths),0))%>%
select(Date, deaths, new_deaths)
upto = "2020-06-09"
extend_case = extend_epi_records(base_data = tidy_case_data(case_df), extra_data = df_cases_tot, data_name='confirmed_cases')
extend_death = extend_epi_records(base_data = tidy_case_data(death_df), extra_data = df_deaths_tot, data_name='deaths')
extend_death
extend_death = extend_epi_records(base_data = tidy_death_data(death_df), extra_data = df_deaths_tot, data_name='deaths')
scot_data = create_history(extend_case,tidy_pop_data(pop_df), upto = upto)$data
scot_death = create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data
scot_death
scot_data
scot_death
extend_epi_records <- function(base_data, extra_data, data_name){
# Scottish overall cases
scot_cases_tot <- extra_data %>%
mutate(Date = lubridate::ymd(Date))
scot_data <-
base_data %>%
select(-Scotland,) %>%
full_join(scot_cases_tot %>%
select(Date,!!as.symbol(data_name)) %>%
rename(Scotland = !!as.symbol(data_name)),
by = "Date") %>%
mutate(Scotland = replace_na(Scotland,0)) %>%
mutate_all(replace_na(.,-999))
#replace(is.na(.), -999)
return(scot_data)
}
extend_death
create_history(extend_case,tidy_pop_data(pop_df), upto = upto)$data
create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data
create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data %>% print(width=Inf)
source("eeraModel_data_preprocessing_functions.R")
# cases pre change in recording practices
WATTY62DATA <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/regional_cases.csv"
WATTY62POP <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/HB_Populations.csv"
WATTY62DEATHS <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/regional_deaths.csv"
pop_df <- readr::read_csv(file =WATTY62POP , col_types = cols())
case_df = readr::read_csv(file = WATTY62DATA, col_types = cols())
death_df <- readr::read_csv(file = WATTY62DEATHS, col_types = cols())
# cases post change in recording practices
url_scot_country <- "https://www.gov.scot/binaries/content/documents/govscot/publications/statistics/2020/04/coronavirus-covid-19-trends-in-daily-data/documents/trends-in-number-of-people-in-hospital-with-confirmed-or-suspected-covid-19/trends-in-number-of-people-in-hospital-with-confirmed-or-suspected-covid-19/govscot%3Adocument/Trends%2Bin%2Bdaily%2BCOVID-19%2Bdata%2B-%2B110520.xlsx?forceDownload=true"
httr::GET(url_scot_country, httr::write_disk(scot_data_gov <- tempfile(fileext = "govcoviddata.xlsx")))
df_cases_tot <- readxl::read_excel(scot_data_gov, sheet = "Table 5 - Testing", skip = 3)%>%
rename("Date" = "...1",
"confirmed_cases" = "Positive")%>%
mutate(new_cases = `Daily...5`)%>%
select(Date, confirmed_cases, new_cases)
df_deaths_tot <- readxl::read_excel(scot_data_gov, sheet = "Table 8 - Deaths", skip =2) %>%
select(Date, `Number of COVID-19 confirmed deaths registered to date`) %>%
rename(deaths = `Number of COVID-19 confirmed deaths registered to date`) %>%
mutate(new_deaths = deaths - replace_na(lag(deaths),0))%>%
select(Date, deaths, new_deaths)
extend_case = extend_epi_records(base_data = tidy_case_data(case_df), extra_data = df_cases_tot, data_name='confirmed_cases')
extend_death = extend_epi_records(base_data = tidy_death_data(death_df), extra_data = df_deaths_tot, data_name='deaths')
extend_death
create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data
disease_df = extend_death;pop_df = tidy_pop_data(pop_df); upto = upto;
join = T ; data_join = extend_case
join & !is.null(data_join)
temp<- left_join(data_join %>% select(Date),disease_df,by="Date") %>%
replace(is.na(.),0)
temp
join
disease_df
right_join(pop_df %>%
select(Name,Population),
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
)
%>%
tibble::rownames_to_column(),
by = c("Name"="rowname"))
pop_df %>%
select(Name,Population)
temp %>%
filter(Date <= upto)
temp %>%
filter(Date <= upto) %>%
select(-Date)
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
)
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column()
right_join(pop_df %>%
select(Name,Population),
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column(),
by = c("Name"="rowname"))
rval_temp <- right_join(pop_df %>%
select(Name,Population),
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column(),
by = c("Name"="rowname")) %>%
select(-Name) %>%
mutate_if(is.factor, as.character)
colnames(rval_temp) <- (1:ncol(rval_temp))-2
rval_temp
order_row= as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column() %>%
select(rowname)
order_row
# function creating the input data giving information of number of cases/deaths per day (in column) and for each
# health boards (rows). the last row (15) is for the whole Scotland.
# The first column is the population at risk.
# disease_df: data.frame / tibble providing the epidemiological data (cases / deaths) use in the model or all areas of interest (scottish health boards and Scotland)
# pop_df: data.frame / tibble providing the population size for all areas of interest (scottish health boards and Scotland)
# upto: date limit of interest (a date in the format "yyyy-mm-dd"). if NULL, upto = max(disease_df$Date)
# join: TRUE/FALSE. boolean to allow (or not) the joining of data.frame / tibble to ensure consistencies between data frame
# data_join: disease data to match
create_history <- function(disease_df,pop_df, upto=NULL, join=F,data_join=NULL){
require(dplyr)
require(tidyr)
require(lubridate)
if(join & !is.null(data_join)){
temp<- left_join(data_join %>% select(Date),disease_df,by="Date") %>%
replace(is.na(.),0)
} else{
temp = disease_df
if(join & is.null(data_join)) message("Warning!! Base data not provided. Joining not implemented.")
}
#define record date limit
if(is.null(upto)) upto = max(temp$Date)
#formating  the case data (HPS) for model input
rval_temp <- right_join(pop_df %>%
select(Name,Population),
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column(),
by = c("Name"="rowname")) %>%
select(-Name) %>%
mutate_if(is.factor, as.character)
colnames(rval_temp) <- (1:ncol(rval_temp))-2
order_row= as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column() %>%
select(rowname)
df_return = list(
data = rval_temp,
name = order_row
)
return(df_return)
}
extend_case = extend_epi_records(base_data = tidy_case_data(case_df), extra_data = df_cases_tot, data_name='confirmed_cases')
extend_death = extend_epi_records(base_data = tidy_death_data(death_df), extra_data = df_deaths_tot, data_name='deaths')
scot_data = create_history(extend_case,tidy_pop_data(pop_df), upto = upto)$data
scot_data
scot_death = create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data
scot_death
right_join(pop_df %>%
select(Name,Population),
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column(),
by = c("Name"="rowname")) %>%
select(-Name) %>%
mutate_if(is.factor, as.character) %>%
mutate_if(as.character, as.numeric)
right_join(pop_df %>%
select(Name,Population),
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column(),
by = c("Name"="rowname")) %>%
select(-Name) %>%
mutate_if(is.factor, as.character) %>%
mutate_if(is.character, as.numeric)
# function creating the input data giving information of number of cases/deaths per day (in column) and for each
# health boards (rows). the last row (15) is for the whole Scotland.
# The first column is the population at risk.
# disease_df: data.frame / tibble providing the epidemiological data (cases / deaths) use in the model or all areas of interest (scottish health boards and Scotland)
# pop_df: data.frame / tibble providing the population size for all areas of interest (scottish health boards and Scotland)
# upto: date limit of interest (a date in the format "yyyy-mm-dd"). if NULL, upto = max(disease_df$Date)
# join: TRUE/FALSE. boolean to allow (or not) the joining of data.frame / tibble to ensure consistencies between data frame
# data_join: disease data to match
create_history <- function(disease_df,pop_df, upto=NULL, join=F,data_join=NULL){
require(dplyr)
require(tidyr)
require(lubridate)
if(join & !is.null(data_join)){
temp<- left_join(data_join %>% select(Date),disease_df,by="Date") %>%
replace(is.na(.),0)
} else{
temp = disease_df
if(join & is.null(data_join)) message("Warning!! Base data not provided. Joining not implemented.")
}
#define record date limit
if(is.null(upto)) upto = max(temp$Date)
#formating  the case data (HPS) for model input
rval_temp <- right_join(pop_df %>%
select(Name,Population),
as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column(),
by = c("Name"="rowname")) %>%
select(-Name) %>%
mutate_if(is.factor, as.character) %>%
mutate_if(is.character, as.numeric)
colnames(rval_temp) <- (1:ncol(rval_temp))-2
order_row= as.data.frame(
t(
as.matrix(
temp %>%
filter(Date <= upto) %>%
select(-Date)
)
)
) %>%
tibble::rownames_to_column() %>%
select(rowname)
df_return = list(
data = rval_temp,
name = order_row
)
return(df_return)
}
create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data
create_history(extend_case,tidy_pop_data(pop_df), upto = upto)$data
getwd()
getwd()
setwd(""/Users/tporphyr/Documents/GitHub/Covid19_EERAModel/preprocessing-scripts")
setwd("/Users/tporphyr/Documents/GitHub/Covid19_EERAModel/preprocessing-scripts")
getwd()
ls
library(dplyr)
library(readr)
library(tidyr)
library(readxl)
library(lubridate)
# ----------------------------------
# load functions
# ----------------------------------
source("eeraModel_data_preprocessing_functions.R")
#======================
# Settings
#======================
do.write = F
upto = "2020-06-09"
# ----------------------------------
# create data use for model
# ----------------------------------
#create the case and death data
# cases pre change in recording practices
WATTY62DATA <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/regional_cases.csv"
WATTY62POP <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/HB_Populations.csv"
WATTY62DEATHS <- "https://raw.githubusercontent.com/watty62/Scot_covid19/master/data/processed/regional_deaths.csv"
pop_df <- readr::read_csv(file =WATTY62POP , col_types = cols())
case_df = readr::read_csv(file = WATTY62DATA, col_types = cols())
death_df <- readr::read_csv(file = WATTY62DEATHS, col_types = cols())
# cases post change in recording practices
url_scot_country <- "https://www.gov.scot/binaries/content/documents/govscot/publications/statistics/2020/04/coronavirus-covid-19-trends-in-daily-data/documents/trends-in-number-of-people-in-hospital-with-confirmed-or-suspected-covid-19/trends-in-number-of-people-in-hospital-with-confirmed-or-suspected-covid-19/govscot%3Adocument/Trends%2Bin%2Bdaily%2BCOVID-19%2Bdata%2B-%2B110520.xlsx?forceDownload=true"
httr::GET(url_scot_country, httr::write_disk(scot_data_gov <- tempfile(fileext = "govcoviddata.xlsx")))
df_cases_tot <- readxl::read_excel(scot_data_gov, sheet = "Table 5 - Testing", skip = 3)%>%
rename("Date" = "...1",
"confirmed_cases" = "Positive")%>%
mutate(new_cases = `Daily...5`)%>%
select(Date, confirmed_cases, new_cases)
df_deaths_tot <- readxl::read_excel(scot_data_gov, sheet = "Table 8 - Deaths", skip =2) %>%
select(Date, `Number of COVID-19 confirmed deaths registered to date`) %>%
rename(deaths = `Number of COVID-19 confirmed deaths registered to date`) %>%
mutate(new_deaths = deaths - replace_na(lag(deaths),0))%>%
select(Date, deaths, new_deaths)
extend_case = extend_epi_records(base_data = tidy_case_data(case_df), extra_data = df_cases_tot, data_name='confirmed_cases')
extend_death = extend_epi_records(base_data = tidy_death_data(death_df), extra_data = df_deaths_tot, data_name='deaths')
scot_data = create_history(extend_case,tidy_pop_data(pop_df), upto = upto)$data
scot_death = create_history(extend_death,tidy_pop_data(pop_df), upto = upto,
join = T, data_join = extend_case)$data
extend_case
extend_death
scot_data
scot_death
polymoduk_norm=read_xlsx("./data/contact_matrices_152_countries/MUestimates_all_locations_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_home=read_xlsx("./data/contact_matrices_152_countries/MUestimates_home_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_other=read_xlsx("./data/contact_matrices_152_countries/MUestimates_other_locations_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_work=read_xlsx("./data/contact_matrices_152_countries/MUestimates_work_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
polymoduk_school=read_xlsx("./data/contact_matrices_152_countries/MUestimates_school_2.xlsx",
sheet="United Kingdom of Great Britain",col_names = c("00-04","05-09","10-14","15-19","20-24","25-29","30-34","35-39",
"40-44","45-49","50-54","55-59","60-64","65-69","70-74","75+"))
waifw_norm = create_mixmat(polymoduk_norm)
waifw_home = create_mixmat(polymoduk_home)
waifw_other = create_mixmat(polymoduk_other)
waifw_school = create_mixmat(polymoduk_school)
waifw_work = create_mixmat(polymoduk_work)
waifw_sdist = waifw_home + waifw_other
census_age = read_csv(file ="./data/Scotland-HealthBoard-census-2011/DC1117SC.csv",
skip=5 , col_names = c("Health_Board","age","All people","Males","Females"), col_types = cols())
order_name = create_history(tidy_case_data(case_df),tidy_pop_data(pop_df), upto = upto)$name
scot_age <- create_age_pop(census_df = census_age, order_name)
