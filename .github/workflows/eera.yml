name: Covid19EERAModel

on: [push]

jobs:
  build:
    name: ${{ matrix.os }} (${{ matrix.config.compiler }})
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
                os: ['ubuntu-latest', 'macos-latest']
                config: [{
                            compiler: gcc,
                            compilerpp: g++
                        },
                        {
                            compiler: clang,
                            compilerpp: clang++
                        }
                        ]

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies (Ubuntu)
      run: sudo apt-get update && sudo apt-get install -y libgsl-dev clang lcov cppcheck htmldoc poppler-utils clang-tidy graphviz doxygen
      if: matrix.os == 'ubuntu-latest'

    - name: Install Brew (Mac OS X)
      run : /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      if: matrix.os == 'macos-latest'

    - name: Install Dependencies (Mac OS X)
      run : brew update && brew install gsl cppcheck lcov poppler htmldoc graphviz doxygen
      if: matrix.os == 'macos-latest'

    - name: Compile
      env:
              CC: ${{ matrix.config.compiler }}
              CXX: ${{ matrix.config.compilerpp }}
      run: |
        mkdir build
        cd build
        cmake .. -DCODE_COVERAGE=ON -DCLANG_TIDY=ON
        make 2>&1 | tee clang_tidy_build_results.log
        
    - name: Run regression tests
      run: |
        ./scripts/RunRegressionTests.sh 1 12
        if [ $? -eq 0 ]; then
          echo "Regression tests completed successfully"
          exit 0
        else
          echo "Regression tests failed"
          exit 1
        fi

    - name: Run unit tests
      run: |
        ./build/bin/Covid19EERAModel-unit_tests
        if [ $? -eq 0 ]; then
          echo "Unit tests completed successfully"
          exit 0
        else
          echo "Unit tests failed"
          exit 1
        fi
    - name: Run Cpp Check
      run: |
         for i in src/*.h src/*.cpp test/unit/*.cpp; do 
           if cppcheck --language=c++ --std=c++11 --error-exitcode=1 $i; then
             continue
           else
             exit 1
           fi
         done

    - name: Run GCov and LCov Code Coverage (Ubuntu GCC Only)
      run : |
            ./scripts/SetUpModelRun.sh ./data/ ./test/regression/run1/data/
            cd build
            make coverage
            htmldoc --webpage -f coverage-src-output.pdf Covid19EERAModel_coverage/src/index-sort-l.html
            htmldoc --webpage -f coverage-test-output.pdf Covid19EERAModel_coverage/test/unit/index-sort-l.html
            pdfunite coverage-src-output.pdf coverage-test-output.pdf coverage-output.pdf
            rm coverage-*-*.pdf
      if: matrix.config.compiler == 'gcc' && matrix.os == 'ubuntu-latest'

    - name: Upload Coverage PDF (Ubuntu GCC Only)
      uses: actions/upload-artifact@v1
      with:
              name: Coverage PDF
              path: build/coverage-output.pdf
      if: matrix.config.compiler == 'gcc' && matrix.os == 'ubuntu-latest'

    - name: Upload CMake build (Clang-Tidy) Log
      uses: actions/upload-artifact@v1
      with:
              name: CMake (with Clang Tidy) Build Warning Log
              path: build/clang_tidy_build_results.log
      if: matrix.os == 'ubuntu-latest'

    - name: Build Doxygen Documentation (Ubuntu GCC)
      run : |
            mkdir -p doxygen
            doxygen
      if: matrix.os == 'ubuntu-latest' && matrix.config.compiler == 'gcc'
    
    - name: Commit Doxygen files (Ubuntu GCC)
      run: |
           git config --local user.email "action@github.com"
           git config --local user.name "GitHub Action"
           git add doxygen/*
           git commit -m "Updated Doxygen Documentation" -a
      if: matrix.os == 'ubuntu-latest' && matrix.config.compiler == 'gcc'
    
    - name: Push changes (Ubuntu GCC)
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: kzscisoft/doxygen
        force: true
      if: matrix.os == 'ubuntu-latest' && matrix.config.compiler == 'gcc'
